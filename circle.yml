machine:
  environment:

    # make some env vars to save typing
    # GWS should already exists on the ubuntu trusty build image
    GWS: "$HOME/.go_workspace"
    A: "$GWS/src/github.com/$CIRCLE_PROJECT_USERNAME"
    B: "$A/$CIRCLE_PROJECT_REPONAME"

  services:
    - docker

dependencies:
  override:
    # ported from https://discuss.circleci.com/t/overriding-go-inference-in-the-dependencies-phase/660
    # put the source in $GOPATH
    - mkdir -p $GWS/pkg $GWS/bin $A
    - ln -fs $HOME/$CIRCLE_PROJECT_REPONAME $B

    # make it *only* $GWS, dunno why there's two defaults in there
    - echo 'export GOPATH=$GWS' >> ~/.circlerc

    # pre-compile go-sqlite3 to save time in testing/docker container building
    - cd "$B" && go install ./vendor/github.com/mattn/go-sqlite3

test:
  override:
    - cd "$B" && go vet ./token ./syncstorage ./api
    - cd "$B" && go test -v ./token ./syncstorage ./api

deployment:
  hub_latest:
    branch: master
    commands:
      # create a version.json
      - >
          printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n'
          "$CIRCLE_SHA1"
          "$CIRCLE_TAG"
          "$CIRCLE_PROJECT_USERNAME"
          "$CIRCLE_PROJECT_REPONAME"
          "$CIRCLE_BUILD_URL" > version.json
      - cp version.json $CIRCLE_ARTIFACTS

      # build a static binary
      - cd "$B" && go build --ldflags '-extldflags "-static"' .

      # build image and put its sha256 into artifacts to aid verification
      - docker build -t "app:build" .
      - docker images --no-trunc | awk '/^app/ {print $3}' | tee $CIRCLE_ARTIFACTS/docker-image-shasum256.txt

      - test -e $CIRCLE_ARTIFACTS/bin || mkdir -p $CIRCLE_ARTIFACTS/bin
      - cp go-syncstorage $CIRCLE_ARTIFACTS/bin/go-syncstorage-linux-amd64-$CIRCLE_SHA1
      - >
          sha256sum $CIRCLE_ARTIFACTS/bin/go-syncstorage-linux-amd64-$CIRCLE_SHA1 |
          awk '{print $1}' |
          tee $CIRCLE_ARTIFACTS/bin/go-syncstorage-linux-amd64-$CIRCLE_SHA1-shasum256.txt

      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker tag app:build ${DOCKERHUB_REPO}:latest
      - docker push ${DOCKERHUB_REPO}:latest

  hub_releases:
    tag: /.*/
    commands:
      # create a version.json
      - >
          printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n'
          "$CIRCLE_SHA1"
          "$CIRCLE_TAG"
          "$CIRCLE_PROJECT_USERNAME"
          "$CIRCLE_PROJECT_REPONAME"
          "$CIRCLE_BUILD_URL" > version.json
      - cp version.json $CIRCLE_ARTIFACTS

      # build a static binary
      - cd "$B" && go build --ldflags '-extldflags "-static"' .

      # build image and put its sha256 into artifacts to aid verification
      - docker build -t "app:build" .
      - docker images --no-trunc | awk '/^app/ {print $3}' | tee $CIRCLE_ARTIFACTS/docker-image-shasum256.txt


      - test -e $CIRCLE_ARTIFACTS/bin || mkdir -p $CIRCLE_ARTIFACTS/bin
      - cp go-syncstorage "$CIRCLE_ARTIFACTS/bin/go-syncstorage-linux-amd64-$CIRCLE_TAG"
      - >
          sha256sum $CIRCLE_ARTIFACTS/bin/go-syncstorage-linux-amd64-$CIRCLE_TAG |
          awk '{print $1}' |
          tee $CIRCLE_ARTIFACTS/bin/go-syncstorage-linux-amd64-$CIRCLE_TAG-shasum256.txt

      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker tag app:build ${DOCKERHUB_REPO}:${CIRCLE_TAG}
      - docker push ${DOCKERHUB_REPO}:${CIRCLE_TAG}

# this is just for dev, uncomment for testing circleci building
#  hub_all:
#    branch: /.*/
#    commands:
#      # create a version.json
#      - >
#          printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n'
#          "$CIRCLE_SHA1"
#          "$CIRCLE_TAG"
#          "$CIRCLE_PROJECT_USERNAME"
#          "$CIRCLE_PROJECT_REPONAME"
#          "$CIRCLE_BUILD_URL" > version.json
#      - cp version.json $CIRCLE_ARTIFACTS
#
#      # build a static binary
#      - cd "$B" && go build --ldflags '-extldflags "-static"' .
#
#      # build image and put its sha256 into artifacts to aid verification
#      - docker build -t "app:build" .
#      - docker images --no-trunc | awk '/^app/ {print $3}' | tee $CIRCLE_ARTIFACTS/docker-image-shasum256.txt
#
#      - test -e $CIRCLE_ARTIFACTS/bin || mkdir -p $CIRCLE_ARTIFACTS/bin
#      - cp go-syncstorage $CIRCLE_ARTIFACTS/bin/go-syncstorage-linux-amd64-$CIRCLE_SHA1
#      - >
#          sha256sum $CIRCLE_ARTIFACTS/bin/go-syncstorage-linux-amd64-$CIRCLE_SHA1 |
#          awk '{print $1}' |
#          tee $CIRCLE_ARTIFACTS/bin/go-syncstorage-linux-amd64-$CIRCLE_SHA1-shasum256.txt
#
#      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
#      - docker tag app:build ${DOCKERHUB_REPO}:unstable
#      - docker push ${DOCKERHUB_REPO}:unstable
#
